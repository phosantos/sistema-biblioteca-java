/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.ViewClientes;

import view.ViewUsuarios.*;
import dao.ClientDAO;
import dao.UserDAO;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import model.Client;
import model.User;

/**
 *
 * @author Pedro Santos
 */
public class CadCliente extends javax.swing.JInternalFrame {

        /**
         * Creates new form ViewCadUsuarios
         */
        public CadCliente() {
                initComponents();
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enderecoInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cadastrarBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cpfInput = new javax.swing.JTextField();
        nomeInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();

        setClosable(true);
        setMinimumSize(new java.awt.Dimension(1280, 695));
        setPreferredSize(new java.awt.Dimension(1280, 695));

        enderecoInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel1.setText("Endereço");

        cadastrarBtn.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cadastrarBtn.setText("Cadastrar");
        cadastrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel3.setText("CPF");

        cpfInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        nomeInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel4.setText("Nome");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setText("Email");

        emailInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(nomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cpfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cadastrarBtn)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enderecoInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(384, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enderecoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(cadastrarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        // verificar se todos os campos foram preenchidos

        private boolean verificarCamposPreenchidos() {
                if (cpfInput.getText().length() > 0 && nomeInput.getText().length() > 0
                                && emailInput.getText().length() > 0 && enderecoInput.getText().length() > 0) {
                        return true;
                } else {
                        return false;
                }
        }

        private boolean verificarCpf(String cpf) throws SQLException {
                ClientDAO dao = new ClientDAO();
                Client cliente = dao.verifyClientCpf(cpf);
                dao.close();

                if (cliente != null) {
                        return true;
                } else {
                        return false;
                }
        }

        private void cadastrarBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cadastrarBtnActionPerformed

                if (verificarCamposPreenchidos()) {
                        Client cliente = new Client(nomeInput.getText(), cpfInput.getText(), enderecoInput.getText(),
                                        enderecoInput.getText());

                        try {
                                if (verificarCpf(cliente.getCpf())) {
                                        JOptionPane.showMessageDialog(null, "CPF já Cadastrado!");
                                } else {
                                        ClientDAO dao;

                                        dao = new ClientDAO();
                                        if (dao.insertClient(cliente)) {
                                                JOptionPane.showMessageDialog(null, "Usuario cadastrado!");
                                                this.dispose();
                                        } else {
                                                JOptionPane.showMessageDialog(null,
                                                                "Erro! Usuario não cadastrado!");
                                        }
                                        dao.close();

                                }
                        } catch (HeadlessException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                        } catch (SQLException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                        }

                } else {
                        JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
                }

        }// GEN-LAST:event_cadastrarBtnActionPerformed

        private void verificaAdmInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_verificaAdmInputActionPerformed
                // TODO add your handling code here:
        }// GEN-LAST:event_verificaAdmInputActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrarBtn;
    private javax.swing.JTextField cpfInput;
    private javax.swing.JTextField emailInput;
    private javax.swing.JTextField enderecoInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nomeInput;
    // End of variables declaration//GEN-END:variables
}
